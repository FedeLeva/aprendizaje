(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{401:function(a,s,e){"use strict";e.r(s);var t=e(54),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"ramas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ramas"}},[a._v("#")]),a._v(" Ramas")]),a._v(" "),e("h2",{attrs:{id:"cambiar-la-rama-principal-a-main"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cambiar-la-rama-principal-a-main"}},[a._v("#")]),a._v(" Cambiar la rama principal a main")]),a._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[a._v("Git Branch -m ramactual  ramanueva\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[a._v("git config --global init.defaultBranch main = Sirve para futuros proyectos.\n")])])]),e("hr"),a._v(" "),e("hr"),a._v(" "),e("hr"),a._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[a._v("Git Branch \n")])])]),e("p",[a._v("Para saber en que rama estas")]),a._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[a._v("Git Branch nombreRama \n")])])]),e("p",[a._v("Crear una rama.")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),e("p",[a._v("Al hacer un commit y un push , git te da un comando para hacer un push en la RAMA nueva.")])]),a._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[a._v("Git checkout nombrerama  \n")])])]),e("p",[a._v("Para cambiar de rama")]),a._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[a._v("git log --oneline --graph\t\n")])])]),e("p",[a._v("Muestra visualmente las ramas , le podes añadir el –all antes de –graph.")]),a._v(" "),e("h2",{attrs:{id:"fusionar-ramas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fusionar-ramas"}},[a._v("#")]),a._v(" Fusionar ramas")]),a._v(" "),e("ol",[e("li",[a._v("Ubicarse en la rama que se va a actualizar (va a recibir las modificaciones)")]),a._v(" "),e("li",[a._v("Usar el comando")])]),a._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[a._v("Git merge nombrerama \n")])])]),e("p",[a._v("Sirve para fusionar ramas")]),a._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[a._v("Eliminar la rama que ya se fusiono con el comando:")])]),a._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[a._v("git branch -d nombreRama \n")])])]),e("p",[a._v("Eliminar una rama")]),a._v(" "),e("h2",{attrs:{id:"conflictos-al-fusionar-ramas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conflictos-al-fusionar-ramas"}},[a._v("#")]),a._v(" Conflictos al fusionar ramas")]),a._v(" "),e("p",[a._v("Si son archivos que no existe en la main , al hacer un merge no genera conflictos.")]),a._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[a._v("git checkout -b nuevaRama \n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("Crea la nuevaRama y viaja a ella.\n")])])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),e("p",[a._v("Si se hace marge en dos rama que tienen modificado el mismo archivo  se genera conflictos.")]),a._v(" "),e("p",[a._v("ACORDATE DE REGISTRAR CON COMMIT LOS CAMBIOS.")])]),a._v(" "),e("p",[a._v("Si dos commit modifican el mismo archivo se genera conflictos y vos tenes que elegir que se queda y que se borra.")]),a._v(" "),e("p",[a._v("Luego de solucionar el conflicto hacer un commit.")])])}),[],!1,null,null,null);s.default=r.exports}}]);